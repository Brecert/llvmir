{"version":3,"file":"index.js","sources":["../dist-src/values/value.js","../dist-src/instructions/instruction.js","../dist-src/instructions/binary_operation.js","../dist-src/types/type.js","../dist-src/values/integer.js","../dist-src/values/basic_block.js","../dist-src/values/function.js","../dist-src/values/function_argument.js","../dist-src/types/integer.js","../dist-src/types/label.js","../dist-src/types/void.js","../dist-src/types/function_signature.js","../dist-src/instructions/ret.js","../dist-src/constants.js","../dist-src/instructions/icmp.js","../dist-src/instructions/br.js","../dist-src/instructions/call.js","../dist-src/serializer.js","../dist-src/utils.js","../dist-src/index.js"],"sourcesContent":["export default class Value {\r\n    constructor(type) {\r\n        this.type = type;\r\n    }\r\n}\r\n","import Value from '../values/value.js';\r\nexport default class Instruction extends Value {\r\n    constructor(instructionName, type) {\r\n        super(type);\r\n        this.instructionName = instructionName;\r\n        this.terminator = false;\r\n    }\r\n    isEqual(to) {\r\n        return this.type.isEqual(to.type);\r\n    }\r\n}\r\n","import invariant from 'tiny-invariant';\r\nimport Instruction from './instruction.js';\r\nexport default class BinaryOperation extends Instruction {\r\n    // todo: support Vector<Integer>\r\n    constructor(name, type, op1, op2) {\r\n        super(name, type);\r\n        this.op1 = op1;\r\n        this.op2 = op2;\r\n        this.flags = [];\r\n        invariant(op1.type.isEqual(op2.type), `Instuction Error: op1 and op2 must have matching types`);\r\n    }\r\n}\r\n","export default class Type {\r\n    constructor(typeName) {\r\n        this.typeName = typeName;\r\n    }\r\n}\r\n","import Value from './value.js';\r\nexport default class Integer extends Value {\r\n    constructor(type, value) {\r\n        super(type);\r\n        this.type = type;\r\n        this.value = value;\r\n    }\r\n    isEqual(to) {\r\n        return (this === to ||\r\n            this.type.isEqual(to.type));\r\n    }\r\n}\r\n","import Value from './value.js';\r\nimport * as Types from '../types/index.js';\r\nimport invariant from 'tiny-invariant';\r\nexport default class BasicBlock extends Value {\r\n    constructor(name) {\r\n        super(new Types.Label);\r\n        this.name = name;\r\n        this.instructions = [];\r\n        this.terminated = false;\r\n    }\r\n    push(...instrctions) {\r\n        instrctions.forEach(inst => {\r\n            invariant(!this.terminated, 'block has already been terminated with a terminator instruction!');\r\n            this.instructions.push(inst);\r\n            if (inst.terminator) {\r\n                this.terminated = true;\r\n            }\r\n        });\r\n    }\r\n    isEqual(to) {\r\n        return (this === to);\r\n    }\r\n}\r\n","import { Value, BasicBlock, FunctionArgument } from './index.js';\r\nimport invariant from 'tiny-invariant';\r\nexport default class Function extends Value {\r\n    constructor({ signature, name, argNames, body }) {\r\n        super(signature);\r\n        this.blocks = [];\r\n        this.argNames = new Map;\r\n        this.signature = signature;\r\n        this.name = name;\r\n        this.body = body || new BasicBlock;\r\n        invariant(signature.parameters.length === argNames.length, 'Invalid number of names, signature length and name length do not match');\r\n        argNames.forEach((name, i) => {\r\n            invariant(!this.argNames.has(name), `Duplicate argument name: ${name}`);\r\n            this.argNames.set(name, i);\r\n        });\r\n        this.args = signature.parameters.map((param, i) => new FunctionArgument(param, i, argNames[i]));\r\n    }\r\n    addBlock(block) {\r\n        this.blocks.push(block);\r\n        return block;\r\n    }\r\n    isEqual(to) {\r\n        return (this === to ||\r\n            this.type.isEqual(to.type));\r\n    }\r\n}\r\n","import Value from './value.js';\r\nexport default class FunctionArgument extends Value {\r\n    constructor(type, position, name) {\r\n        super(type);\r\n        this.type = type;\r\n        this.position = position;\r\n        this.name = name;\r\n    }\r\n    isEqual(to) {\r\n        return (this === to ||\r\n            to instanceof FunctionArgument &&\r\n                this.type.isEqual(to.type));\r\n    }\r\n}\r\n","import Type from './type.js';\r\nimport * as Values from '../values/index.js';\r\nexport default class Integer extends Type {\r\n    constructor(size) {\r\n        super(`i${size}`);\r\n        this.size = size;\r\n    }\r\n    val(value) {\r\n        return new Values.Integer(this, value);\r\n    }\r\n    isEqual(to) {\r\n        return (this === to ||\r\n            to instanceof Integer &&\r\n                this.size === to.size);\r\n    }\r\n}\r\n","import Type from './type.js';\r\nexport default class Label extends Type {\r\n    constructor(labelName) {\r\n        super('label');\r\n        this.labelName = labelName;\r\n    }\r\n    isEqual(to) {\r\n        return (this === to);\r\n    }\r\n}\r\n","import Type from './type.js';\r\nexport default class Void extends Type {\r\n    constructor() {\r\n        super('void');\r\n    }\r\n    isEqual(to) {\r\n        return to instanceof Void;\r\n    }\r\n}\r\n","import Type from '../types/type.js';\r\nexport default class FunctionSignature extends Type {\r\n    constructor(returnType, parameters) {\r\n        super(returnType.typeName);\r\n        this.returnType = returnType;\r\n        this.parameters = parameters;\r\n    }\r\n    isEqual(to) {\r\n        return (this === to ||\r\n            to instanceof FunctionSignature &&\r\n                this.returnType === to.returnType &&\r\n                this.parameters === to.parameters);\r\n    }\r\n}\r\n","import invariant from 'tiny-invariant';\r\nimport Instruction from './instruction.js';\r\nimport * as Types from '../types/index.js';\r\nexport default class Ret extends Instruction {\r\n    constructor(type, value) {\r\n        super('ret', type);\r\n        this.value = value;\r\n        this.terminator = true;\r\n        this.flags = [];\r\n        if (type instanceof Types.Void) {\r\n            invariant(value === undefined, 'Instruction Error: when returning void, `ret void` cannot have any values associated with it');\r\n        }\r\n        else {\r\n            invariant(value !== undefined, 'Instruction Error: when returning any type other than void, a value must be associated with it');\r\n        }\r\n    }\r\n}\r\n","export const BOOL_WIDTH = 1;\r\n","import invariant from 'tiny-invariant';\r\nimport { BOOL_WIDTH } from '../constants.js';\r\nimport Instruction from './instruction.js';\r\nimport * as Types from '../types/index.js';\r\nexport default class ICmp extends Instruction {\r\n    constructor(cond, opType, op1, op2) {\r\n        super('icmp', new Types.Integer(BOOL_WIDTH));\r\n        this.cond = cond;\r\n        this.opType = opType;\r\n        this.op1 = op1;\r\n        this.op2 = op2;\r\n        this.flags = [];\r\n        invariant(opType.isEqual(op1.type), 'Type Error: op1 does not match the expected type');\r\n        invariant(op1.type.isEqual(op2.type), 'Type Error: op1 and op2 must be the same type');\r\n    }\r\n}\r\n// type, opcode, operands\r\n// ${opcode} ${type} ${operands.join(',')}\r\n","import { BOOL_WIDTH } from '../constants.js';\r\nimport invariant from 'tiny-invariant';\r\nimport Instruction from './instruction.js';\r\nimport * as Types from '../types/index.js';\r\nexport default class Br extends Instruction {\r\n    constructor(cond, ifTrue, ifFalse) {\r\n        super('br', new Types.Void);\r\n        this.cond = cond;\r\n        this.ifTrue = ifTrue;\r\n        this.ifFalse = ifFalse;\r\n        this.terminator = true;\r\n        this.flags = [];\r\n        invariant(cond.type instanceof Types.Integer, `Type Error: cond type must be an Integer`);\r\n        invariant(cond.type.size === BOOL_WIDTH, `Type Error: Integer size must be '${BOOL_WIDTH}' not ${cond.type.size}`);\r\n    }\r\n}\r\n","import invariant from 'tiny-invariant';\r\nimport Instruction from './instruction.js';\r\nexport default class Call extends Instruction {\r\n    constructor(type, fn, args) {\r\n        super('call', type);\r\n        this.type = type;\r\n        this.fn = fn;\r\n        this.args = args;\r\n        this.flags = [];\r\n        invariant(type.isEqual(fn.signature.returnType), 'Type Error: Function return type and Call return type must be the same');\r\n        invariant(args.length === fn.signature.parameters.length, 'Instruction Error: Function parameters length and Call args length are not the same');\r\n        args.forEach((arg, i) => {\r\n            invariant(arg.type.isEqual(fn.signature.parameters[i]), `Type Error: Argument ${i}'s type of Call does not match Functions parameter type`);\r\n        });\r\n    }\r\n}\r\n","import * as Instructions from './instructions/index.js';\r\nimport * as Values from './values/index.js';\r\nimport * as Types from './types/index.js';\r\nimport invariant from 'tiny-invariant';\r\nexport default class Serializer {\r\n    constructor() {\r\n        this.id = 0;\r\n        this.identifiers = new Map;\r\n        this.globals = new Set();\r\n        this.block_id = 0;\r\n        this.blocks = new Map;\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        this.id = 0;\r\n        this.identifiers = new Map;\r\n        this.block_id = 0;\r\n        this.blocks = new Map;\r\n    }\r\n    newIdentifier(inst) {\r\n        const id = this.id;\r\n        this.identifiers.set(inst, id);\r\n        this.id += 1;\r\n        return id;\r\n    }\r\n    newGlobal(name) {\r\n        invariant(!this.globals.has(name), `Invalid name: name '${name}' has already been defined`);\r\n        this.globals.add(name);\r\n        return name;\r\n    }\r\n    newBlock(block, name) {\r\n        this.blocks.set(block, name ? name : `bb${this.block_id += 1}`);\r\n        return this.blocks.get(block);\r\n    }\r\n    block(block, blockName) {\r\n        if (block instanceof Values.BasicBlock) {\r\n            blockName = blockName || this.newBlock(block, block.name);\r\n            invariant(block.terminated, `Unterminated Block: '${blockName}'`);\r\n            // (NAME|bb\\d+):\\n\r\n            let io = '';\r\n            io += `${blockName}:\\n`;\r\n            block.instructions.forEach(inst => {\r\n                io += `\\t${this.instruction(inst)}\\n`;\r\n            });\r\n            return io;\r\n        }\r\n    }\r\n    functionSignature(sig) {\r\n        return `${sig.returnType.typeName}`;\r\n    }\r\n    functionArgument(arg) {\r\n        let io = `${arg.type.typeName}`;\r\n        this.newIdentifier(arg.name || `$__${this.id}__`);\r\n        return io;\r\n    }\r\n    function(fn) {\r\n        this.reset();\r\n        /*\r\n            define ${signature} @${name} (${args.join(',')}) {\r\n                ${body}\r\n                ${blocks.join('\\n')}\r\n            }\r\n        */\r\n        let io = `define ${this.functionSignature(fn.signature)} @${this.newGlobal(fn.name)} (${fn.args.map(arg => this.functionArgument(arg))}) {\\n`;\r\n        let bodyName;\r\n        if (fn.body.instructions.length > 0) {\r\n            bodyName = this.newBlock(fn.body, fn.body.name);\r\n        }\r\n        let blockNames = fn.blocks.map(b => this.newBlock(b, b.name));\r\n        let body;\r\n        if (fn.body.instructions.length > 0) {\r\n            body = this.block(fn.body, bodyName);\r\n        }\r\n        let blocks = fn.blocks.map((b, i) => this.block(b, blockNames[i]));\r\n        if (fn.body.instructions.length > 0) {\r\n            io += `${body}\\n`;\r\n        }\r\n        io += `${blocks.join('\\n')}}`;\r\n        return io;\r\n    }\r\n    instruction(inst) {\r\n        let io = '';\r\n        if (!inst.terminator) {\r\n            io += `%${this.newIdentifier(inst)} = `;\r\n        }\r\n        io += `${inst.instructionName} `;\r\n        if (inst instanceof Instructions.BinaryOperation) {\r\n            io += `${inst.type.typeName} ${this.arg(inst, inst.op1)}, ${this.arg(inst, inst.op2)}`;\r\n        }\r\n        if (inst instanceof Instructions.ICmp) {\r\n            io += `${inst.cond} ${inst.opType.typeName} ${this.arg(inst, inst.op1)}, ${this.arg(inst, inst.op2)}`;\r\n        }\r\n        if (inst instanceof Instructions.Ret) {\r\n            io += `${inst.type.typeName}`;\r\n            if (!(inst.type instanceof Types.Void)) {\r\n                io += ` ${this.arg(inst, inst.value)}`;\r\n            }\r\n        }\r\n        if (inst instanceof Instructions.Call) {\r\n            invariant(this.globals.has(inst.fn.name), 'Invalid Name: Call name has not been declared yet');\r\n            io += `${inst.type.typeName} @${inst.fn.name} (${inst.args.map(v => `${v.type.typeName} ${this.arg(inst, v)}`).join(', ')})`;\r\n        }\r\n        if (inst instanceof Instructions.Br) {\r\n            io += `i1 ${this.arg(inst, inst.cond)}, ${this.arg(inst, inst.ifTrue)}, ${this.arg(inst, inst.ifFalse)}`;\r\n        }\r\n        return io;\r\n    }\r\n    arg(inst, value) {\r\n        if (value instanceof Values.Integer) {\r\n            return `${value.value}`;\r\n        }\r\n        if (value instanceof Instructions.Instruction) {\r\n            return `%${this.identifiers.get(value)}`;\r\n        }\r\n        if (value instanceof Values.BasicBlock) {\r\n            invariant(this.blocks.has(value), `basic block ${value.name} has not been declared yet!`);\r\n            return `label %${this.blocks.get(value)}`;\r\n        }\r\n        if (value instanceof Values.FunctionArgument) {\r\n            invariant(value.name, `name doesn't exist for functionargument`);\r\n            return `%${this.identifiers.get(value.name)}`;\r\n        }\r\n        throw `Unimplemented arg: unimplemented arg value: ${value.constructor.name}`;\r\n    }\r\n}\r\n","import * as Instructions from './instructions/index.js';\r\nimport * as Values from './values/index.js';\r\nimport * as Types from './types/index.js';\r\nclass UtilityFunction extends Values.Function {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.blocks = [];\r\n    }\r\n    createBlock(name) {\r\n        const block = new UtilityBlock(name);\r\n        this.addBlock(block);\r\n        return block;\r\n    }\r\n    block(name, cb) {\r\n        const foundBlock = this.blocks.find(b => b.name === name);\r\n        const block = this.blocks.find(b => b.name === name) || new UtilityBlock(name);\r\n        cb(block);\r\n        if (foundBlock === undefined) {\r\n            this.addBlock(block);\r\n        }\r\n        return block;\r\n    }\r\n}\r\nclass UtilityBlock extends Values.BasicBlock {\r\n    binop(name, type, op1, op2) {\r\n        const binop = new Instructions.BinaryOperation(name, type, op1, op2);\r\n        this.push(binop);\r\n        return binop;\r\n    }\r\n    br(cond, ifTrue, ifFalse) {\r\n        const br = new Instructions.Br(cond, ifTrue, ifFalse);\r\n        this.push(br);\r\n        return br;\r\n    }\r\n    call(type, fn, args) {\r\n        const call = new Instructions.Call(type, fn, args);\r\n        this.push(call);\r\n        return call;\r\n    }\r\n    icmp(cond, opType, op1, op2) {\r\n        const icmp = new Instructions.ICmp(cond, opType, op1, op2);\r\n        this.push(icmp);\r\n        return icmp;\r\n    }\r\n    ret(type, value) {\r\n        const ret = new Instructions.Ret(type, value);\r\n        this.push(ret);\r\n        return ret;\r\n    }\r\n}\r\nexport const i = (size) => new Types.Integer(size);\r\nexport const ret = (value) => value instanceof Types.Void\r\n    ? new Instructions.Ret(value)\r\n    : new Instructions.Ret(value.type, value);\r\nexport const nop = new Types.Void;\r\nexport const sig = (returnType, parameters = []) => new Types.FunctionSignature(returnType, parameters);\r\nexport const label = (name) => new Types.Label(name);\r\nexport function define(signature, name, cb) {\r\n    const argNames = signature.parameters.map((v, i) => `${i}`);\r\n    const fn = new UtilityFunction({ signature, name, argNames });\r\n    cb(fn, fn.args);\r\n    return fn;\r\n}\r\n","import * as Instructions from './instructions/index.js';\r\nimport * as Values from './values/index.js';\r\nimport * as Types from './types/index.js';\r\nimport Serializer from './serializer.js';\r\nimport * as utils from './utils.js';\r\nexport { Instructions, Values, Types, Serializer, utils };\r\nexport class Module {\r\n    constructor() {\r\n        this.functions = [];\r\n    }\r\n    addFunction(fn) {\r\n        this.functions.push(fn);\r\n    }\r\n    build(values = this.functions) {\r\n        const s = new Serializer;\r\n        const io = [];\r\n        values.forEach(inst => {\r\n            if (inst instanceof Values.Function) {\r\n                io.push(s.function(inst));\r\n            }\r\n            if (inst instanceof Instructions.Instruction) {\r\n                io.push(s.instruction(inst));\r\n            }\r\n        });\r\n        return io;\r\n    }\r\n}\r\n// const f = define('fib', [{ n: i(32) }], {\r\n// \tmain(self) {\r\n// \t\tself.icmp('slt', i(32), n, i(32).val(2))\r\n// \t\tself.br(icmp, ifThen, ifElse)\r\n// \t}\r\n// }, i(32))\r\n// // todo: add getArg(name: string)\r\n// const n = f.args.find(arg => arg.name === 'n')!\r\n// let ret = new Instructions.Ret(i(32), i(32).val(3))\r\n// let ifThen = f.addBlock(new Values.BasicBlock('if.then'))\r\n// ifThen.push(new Instructions.Ret(n.type, n))\r\n// let ifElse = f.addBlock(new Values.BasicBlock('if.else'))\r\n// let n1 = new Instructions.BinaryOperation('add', n.type, n, i(32).val(-1))\r\n// let res1 = new Instructions.Call(f.signature.returnType, f, [ n1 ])\r\n// let n2 = new Instructions.BinaryOperation('add', n.type, n, i(32).val(-2))\r\n// let res2 = new Instructions.Call(f.signature.returnType, f, [ n2 ])\r\n// let n3 = new Instructions.BinaryOperation('add', n1.type, n1, n2)\r\n// let retElse = new Instructions.Ret(n3.type, n3)\r\n// ifElse.push(n1, res1, n2, res2, n3, retElse)\r\n// let icmp = new Instructions.ICmp('slt', i(32), n, i(32).val(2))\r\n// let br = new Instructions.Br(icmp, ifThen, ifElse)\r\n// f.body.push(icmp, br)\r\n// m.functions.push(f)\r\n// console.log(s.block(b))\r\n"],"names":["Value","constructor","type","Instruction","instructionName","terminator","isEqual","to","BinaryOperation","name","op1","op2","flags","invariant","Type","typeName","Integer","value","BasicBlock","Types","instructions","terminated","push","instrctions","forEach","inst","Function","signature","argNames","body","blocks","Map","parameters","length","i","has","set","args","map","param","FunctionArgument","addBlock","block","position","size","val","Values","Label","labelName","Void","FunctionSignature","returnType","Ret","undefined","BOOL_WIDTH","ICmp","cond","opType","Br","ifTrue","ifFalse","Call","fn","arg","Serializer","id","identifiers","globals","Set","block_id","reset","newIdentifier","newGlobal","add","newBlock","get","blockName","io","instruction","functionSignature","sig","functionArgument","function","bodyName","blockNames","b","join","Instructions","v","UtilityFunction","arguments","createBlock","UtilityBlock","cb","foundBlock","find","binop","br","call","icmp","ret","nop","label","define","Module","functions","addFunction","build","values","s"],"mappings":"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"}